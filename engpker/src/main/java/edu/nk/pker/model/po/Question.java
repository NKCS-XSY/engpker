package edu.nk.pker.model.po;

// Generated 2015-5-20 10:08:13 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name = "question", catalog = "pker")
public class Question implements java.io.Serializable {

	private Integer questionId;
	private Category category;
	private Choice choice;
	private QuestionType questionType;
	private User user;
	private String name;
	private String content;
	private String reference;
	private String options;
	private String analysis;
	private String appendix;
	private Date createTime;
	private Date lastModify;
	private Integer rightTimes;
	private Integer exposeTimes;
	private Integer wrongTimes;
	private Integer difficulty;
	private Set<QuestionTag> questionTags = new HashSet<QuestionTag>(0);
	private Set<Record> records = new HashSet<Record>(0);
	private Set<Favorite> favorites = new HashSet<Favorite>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<Note> notes = new HashSet<Note>(0);

	public Question() {
	}

	public Question(String name, String content, Date createTime,
			Date lastModify) {
		this.name = name;
		this.content = content;
		this.createTime = createTime;
		this.lastModify = lastModify;
	}

	public Question(Category category, Choice choice,
			QuestionType questionType, User user, String name, String content,
			String reference, String options, String analysis, String appendix,
			Date createTime, Date lastModify, Integer rightTimes,
			Integer exposeTimes, Integer wrongTimes, Integer difficulty,
			Set<QuestionTag> questionTags, Set<Record> records,
			Set<Favorite> favorites, Set<Comment> comments, Set<Note> notes) {
		this.category = category;
		this.choice = choice;
		this.questionType = questionType;
		this.user = user;
		this.name = name;
		this.content = content;
		this.reference = reference;
		this.options = options;
		this.analysis = analysis;
		this.appendix = appendix;
		this.createTime = createTime;
		this.lastModify = lastModify;
		this.rightTimes = rightTimes;
		this.exposeTimes = exposeTimes;
		this.wrongTimes = wrongTimes;
		this.difficulty = difficulty;
		this.questionTags = questionTags;
		this.records = records;
		this.favorites = favorites;
		this.comments = comments;
		this.notes = notes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "question_id", unique = true, nullable = false)
	public Integer getQuestionId() {
		return this.questionId;
	}

	public void setQuestionId(Integer questionId) {
		this.questionId = questionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "answer_id")
	public Choice getChoice() {
		return this.choice;
	}

	public void setChoice(Choice choice) {
		this.choice = choice;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_id")
	public QuestionType getQuestionType() {
		return this.questionType;
	}

	public void setQuestionType(QuestionType questionType) {
		this.questionType = questionType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "name", nullable = false, length = 40)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "content", nullable = false, length = 500)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "reference", length = 1000)
	public String getReference() {
		return this.reference;
	}

	public void setReference(String reference) {
		this.reference = reference;
	}

	@Column(name = "options", length = 300)
	public String getOptions() {
		return this.options;
	}

	public void setOptions(String options) {
		this.options = options;
	}

	@Column(name = "analysis", length = 65535)
	public String getAnalysis() {
		return this.analysis;
	}

	public void setAnalysis(String analysis) {
		this.analysis = analysis;
	}

	@Column(name = "appendix", length = 65535)
	public String getAppendix() {
		return this.appendix;
	}

	public void setAppendix(String appendix) {
		this.appendix = appendix;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", nullable = false, length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modify", nullable = false, length = 19)
	public Date getLastModify() {
		return this.lastModify;
	}

	public void setLastModify(Date lastModify) {
		this.lastModify = lastModify;
	}

	@Column(name = "right_times")
	public Integer getRightTimes() {
		return this.rightTimes;
	}

	public void setRightTimes(Integer rightTimes) {
		this.rightTimes = rightTimes;
	}

	@Column(name = "expose_times")
	public Integer getExposeTimes() {
		return this.exposeTimes;
	}

	public void setExposeTimes(Integer exposeTimes) {
		this.exposeTimes = exposeTimes;
	}

	@Column(name = "wrong_times")
	public Integer getWrongTimes() {
		return this.wrongTimes;
	}

	public void setWrongTimes(Integer wrongTimes) {
		this.wrongTimes = wrongTimes;
	}

	@Column(name = "difficulty")
	public Integer getDifficulty() {
		return this.difficulty;
	}

	public void setDifficulty(Integer difficulty) {
		this.difficulty = difficulty;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set<QuestionTag> getQuestionTags() {
		return this.questionTags;
	}

	public void setQuestionTags(Set<QuestionTag> questionTags) {
		this.questionTags = questionTags;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set<Favorite> getFavorites() {
		return this.favorites;
	}

	public void setFavorites(Set<Favorite> favorites) {
		this.favorites = favorites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(Set<Note> notes) {
		this.notes = notes;
	}

}
