package edu.nk.pker.model.po;

// Generated 2015-5-20 10:08:13 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "pker")
public class User implements java.io.Serializable {

	private Integer userId;
	private String username;
	private String truename;
	private String password;
	private String email;
	private String phone;
	private String gender;
	private Date birthday;
	private Boolean enabled;
	private Boolean state;
	private Date addDate;
	private Date registertime;
	private Integer integral;
	private Integer level;
	private Integer addby;
	private Date lastLoginTime;
	private Date loginTime;
	private Set<Paper> papers = new HashSet<Paper>(0);
	private Set<Record> records = new HashSet<Record>(0);
	private Set<Follow> followsForFollowedId = new HashSet<Follow>(0);
	private Set<Message> messagesForSenderId = new HashSet<Message>(0);
	private Set<UserRole> userRoles = new HashSet<UserRole>(0);
	private Set<Question> questions = new HashSet<Question>(0);
	private Set<Favorite> favorites = new HashSet<Favorite>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<Note> notes = new HashSet<Note>(0);
	private Set<Follow> followsForFollowerId = new HashSet<Follow>(0);
	private Set<CompetitionUser> competitionUsers = new HashSet<CompetitionUser>(
			0);
	private Set<Message> messagesForReceiverId = new HashSet<Message>(0);
	private Set<Competition> competitions = new HashSet<Competition>(0);

	public User() {
	}

	public User(String username, String truename, String password) {
		this.username = username;
		this.truename = truename;
		this.password = password;
	}

	public User(String username, String truename, String password,
			String email, String phone, String gender, Date birthday,
			Boolean enabled, Boolean state, Date addDate, Date registertime,
			Integer integral, Integer level, Integer addby, Date lastLoginTime,
			Date loginTime, Set<Paper> papers, Set<Record> records,
			Set<Follow> followsForFollowedId, Set<Message> messagesForSenderId,
			Set<UserRole> userRoles, Set<Question> questions,
			Set<Favorite> favorites, Set<Comment> comments, Set<Note> notes,
			Set<Follow> followsForFollowerId,
			Set<CompetitionUser> competitionUsers,
			Set<Message> messagesForReceiverId, Set<Competition> competitions) {
		this.username = username;
		this.truename = truename;
		this.password = password;
		this.email = email;
		this.phone = phone;
		this.gender = gender;
		this.birthday = birthday;
		this.enabled = enabled;
		this.state = state;
		this.addDate = addDate;
		this.registertime = registertime;
		this.integral = integral;
		this.level = level;
		this.addby = addby;
		this.lastLoginTime = lastLoginTime;
		this.loginTime = loginTime;
		this.papers = papers;
		this.records = records;
		this.followsForFollowedId = followsForFollowedId;
		this.messagesForSenderId = messagesForSenderId;
		this.userRoles = userRoles;
		this.questions = questions;
		this.favorites = favorites;
		this.comments = comments;
		this.notes = notes;
		this.followsForFollowerId = followsForFollowerId;
		this.competitionUsers = competitionUsers;
		this.messagesForReceiverId = messagesForReceiverId;
		this.competitions = competitions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "username", nullable = false, length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "truename", nullable = false, length = 50)
	public String getTruename() {
		return this.truename;
	}

	public void setTruename(String truename) {
		this.truename = truename;
	}

	@Column(name = "password", nullable = false, length = 30)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone", length = 20)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "gender", length = 2)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "birthday", length = 19)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "enabled")
	public Boolean getEnabled() {
		return this.enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	@Column(name = "state")
	public Boolean getState() {
		return this.state;
	}

	public void setState(Boolean state) {
		this.state = state;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "add_date", length = 19)
	public Date getAddDate() {
		return this.addDate;
	}

	public void setAddDate(Date addDate) {
		this.addDate = addDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registertime", length = 19)
	public Date getRegistertime() {
		return this.registertime;
	}

	public void setRegistertime(Date registertime) {
		this.registertime = registertime;
	}

	@Column(name = "integral")
	public Integer getIntegral() {
		return this.integral;
	}

	public void setIntegral(Integer integral) {
		this.integral = integral;
	}

	@Column(name = "level")
	public Integer getLevel() {
		return this.level;
	}

	public void setLevel(Integer level) {
		this.level = level;
	}

	@Column(name = "addby")
	public Integer getAddby() {
		return this.addby;
	}

	public void setAddby(Integer addby) {
		this.addby = addby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_login_time", length = 19)
	public Date getLastLoginTime() {
		return this.lastLoginTime;
	}

	public void setLastLoginTime(Date lastLoginTime) {
		this.lastLoginTime = lastLoginTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "login_time", length = 19)
	public Date getLoginTime() {
		return this.loginTime;
	}

	public void setLoginTime(Date loginTime) {
		this.loginTime = loginTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Paper> getPapers() {
		return this.papers;
	}

	public void setPapers(Set<Paper> papers) {
		this.papers = papers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFollowedId")
	public Set<Follow> getFollowsForFollowedId() {
		return this.followsForFollowedId;
	}

	public void setFollowsForFollowedId(Set<Follow> followsForFollowedId) {
		this.followsForFollowedId = followsForFollowedId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userBySenderId")
	public Set<Message> getMessagesForSenderId() {
		return this.messagesForSenderId;
	}

	public void setMessagesForSenderId(Set<Message> messagesForSenderId) {
		this.messagesForSenderId = messagesForSenderId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserRole> getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(Set<UserRole> userRoles) {
		this.userRoles = userRoles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Question> getQuestions() {
		return this.questions;
	}

	public void setQuestions(Set<Question> questions) {
		this.questions = questions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Favorite> getFavorites() {
		return this.favorites;
	}

	public void setFavorites(Set<Favorite> favorites) {
		this.favorites = favorites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(Set<Note> notes) {
		this.notes = notes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFollowerId")
	public Set<Follow> getFollowsForFollowerId() {
		return this.followsForFollowerId;
	}

	public void setFollowsForFollowerId(Set<Follow> followsForFollowerId) {
		this.followsForFollowerId = followsForFollowerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<CompetitionUser> getCompetitionUsers() {
		return this.competitionUsers;
	}

	public void setCompetitionUsers(Set<CompetitionUser> competitionUsers) {
		this.competitionUsers = competitionUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByReceiverId")
	public Set<Message> getMessagesForReceiverId() {
		return this.messagesForReceiverId;
	}

	public void setMessagesForReceiverId(Set<Message> messagesForReceiverId) {
		this.messagesForReceiverId = messagesForReceiverId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Competition> getCompetitions() {
		return this.competitions;
	}

	public void setCompetitions(Set<Competition> competitions) {
		this.competitions = competitions;
	}

}
